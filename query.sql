CREATE TABLE d_todo (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(75) NOT NULL,
    descripiton TEXT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE auth_user (
	id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
	username VARCHAR(50) NOT NULL,
	password VARCHAR(100) NOT NULL,
	created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

ALTER TABLE d_todo ADD COLUMN user_id INT NULL AFTER description;
ALTER TABLE d_todo ADD INDEX user_id(user_id) USING BTREE;
ALTER TABLE d_todo ADD FOREIGN KEY (user_id) REFERENCES auth_user(id) ON UPDATE CASCADE ON DELETE CASCADE;


CREATE TABLE d_comment_todo (
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    todo_id INT NOT NULL,
    user_id INT NOT NULL,
    comment TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    INDEX (todo_id) USING BTREE,
    INDEX (user_id) USING BTREE,
    FOREIGN KEY (todo_id) REFERENCES d_todo(id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES auth_user(id) ON UPDATE CASCADE ON DELETE CASCADE
);